{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\React\\\\Learning\\\\Section23\\\\part2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Udemy/React/Learning/Section23/part2/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQL,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import MongoClient from 'mongodb/lib/mongo_client';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport ObjectId from \"mongodb\"\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.image}\n      title={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client= await MongoClient.connect(\"mongodb+srv://Kenzie:yXNI62ta9oG0vY2j@atlascluster.vusu1g1.mongodb.net/meetups?retryWrites=true&w=majority\",{ useUnifiedTopology: true });\n\n  const db=client.db();\n  const meetupsCollection= db.collection('meetups');\n\n  const meetups= await meetupsCollection.find({},{_id:1}).toArray();\n\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths:meetups.map(meetup=>({params:{meetupId:meetup._id.toString()}}))\n  };\n}\n\nexport async function getStaticProps(context) {\n\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n  // fetch data for a single meetup\n  const client= await MongoClient.connect(\"mongodb+srv://Kenzie:yXNI62ta9oG0vY2j@atlascluster.vusu1g1.mongodb.net/meetups?retryWrites=true&w=majority\",{ useUnifiedTopology: true });\n\n  const db=client.db();\n  const meetupsCollection= db.collection('meetups');\n\n\nconst selectedMeetup=await meetupsCollection.findOne({_id:ObjectId(meetupId) })\n\n\n\n  return {\n    props: {\n      meetupData:{\n        id:selectedMeetup._id.toString,\n        title:selectedMeetup.title,\n        address:selectedMeetup.address,\n        image:selectedMeetup.image,\n        description:selectedMeetup.description\n      }\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}